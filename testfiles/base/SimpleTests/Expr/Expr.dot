digraph ast {
node [shape=ellipse];
nodesep=0.8;
1[label="(1) AST.Program"];
2[label="(2) AST.List"];
3[label="(3) AST.CompilationUnit []"];
4[label="(4) AST.List"];
3->4;
5[label="(5) AST.List"];
6[label="(6) AST.ClassDecl [Expr]"];
7[label="(7) AST.Modifiers"];
8[label="(8) AST.List"];
7->8;
6->7;
9[label="(9) AST.Opt"];
6->9;
10[label="(10) AST.List"];
6->10;
11[label="(11) AST.List"];
12[label="(12) AST.MethodDecl [foo]"];
13[label="(13) AST.Modifiers"];
14[label="(14) AST.List"];
13->14;
12->13;
15[label="(15) AST.PrimitiveTypeAccess [@primitive, boolean]"];
12->15;
16[label="(16) AST.List"];
12->16;
17[label="(17) AST.List"];
12->17;
18[label="(18) AST.Opt"];
19[label="(19) AST.Block"];
20[label="(20) AST.List"];
21[label="(21) AST.ReturnStmt"];
22[label="(22) AST.Opt"];
23[label="(23) AST.AndLogicalExpr"];
24[label="(24) AST.BooleanLiteral [true]"];
23->24;
25[label="(25) AST.BooleanLiteral [false]"];
23->25;
22->23;
21->22;
20->21;
19->20;
18->19;
12->18;
11->12;
6->11;
5->6;
3->5;
2->3;
1->2;
}
