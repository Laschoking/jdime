digraph ast {
node [shape=ellipse];
nodesep=0.8;
0[label="0 AST.Program"];
1[label="1 AST.List"];
2[label="2 AST.CompilationUnit []"];
3[label="3 AST.List"];
2->3;
4[label="4 AST.List"];
5[label="5 AST.ClassDecl [Bag]"];
6[label="6 AST.Modifiers"];
7[label="7 AST.List"];
6->7;
5->6;
8[label="8 AST.Opt"];
5->8;
9[label="9 AST.List"];
5->9;
10[label="10 AST.List"];
11[label="11 AST.FieldDecl"];
12[label="12 AST.Modifiers"];
13[label="13 AST.List"];
12->13;
11->12;
14[label="14 AST.ArrayTypeAccess"];
15[label="15 AST.PrimitiveTypeAccess [@primitive, int]"];
14->15;
11->14;
16[label="16 AST.List"];
17[label="17 AST.VariableDecl"];
18[label="18 AST.List"];
17->18;
19[label="19 AST.Opt"];
17->19;
16->17;
11->16;
10->11;
20[label="20 AST.ConstructorDecl"];
21[label="21 AST.Modifiers"];
22[label="22 AST.List"];
21->22;
20->21;
23[label="23 AST.List"];
24[label="24 AST.ParameterDeclaration [v]"];
25[label="25 AST.Modifiers"];
26[label="26 AST.List"];
25->26;
24->25;
27[label="27 AST.ArrayTypeAccess"];
28[label="28 AST.PrimitiveTypeAccess [@primitive, int]"];
27->28;
24->27;
23->24;
20->23;
29[label="29 AST.List"];
20->29;
30[label="30 AST.Opt"];
20->30;
31[label="31 AST.Block"];
32[label="32 AST.List"];
33[label="33 AST.ExprStmt"];
34[label="34 AST.AssignSimpleExpr"];
35[label="35 AST.ParseName [values]"];
34->35;
36[label="36 AST.ParseName [v]"];
34->36;
33->34;
32->33;
31->32;
20->31;
10->20;
5->10;
4->5;
2->4;
1->2;
0->1;
}
